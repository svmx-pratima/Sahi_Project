var $an_cu_1633 = _testcase("ANA-1633","SCON within Coverage of Covered Product Advanced EXPR");
$an_cu_1633.start();
var $data = _readExcelFile("../../../analytics/Pre-Release/Data_Meghana.xlsx","Sheet1",true);
var $un = $data[1]["Username"];
var $pwd = $data[1]["pwd"];
var $url = "https://test.salesforce.com";
var $Account = $data[1]["Account"];
var $Technician = $data[1]["Technician"];
var $Product = $data[1]["Product"];
var $OrderStatus = $data[1]["OrderStatus"];
var $Closedon = $data[1]["ClosedOn"];
var $Site = $data[1]["Site"];
var $Component = $data[1]["Component"];
var $ScheduledDate = $data[1]["ScheduledDate"];
var $PreferredStartDate = $data[1]["PreferredStartDate"];
var $PreferredEndDate = $data[1]["PreferredEndDate"];
var $user_meghana = $data[1]["user_meghana"];
$bo_act_login.login($url, $un, $pwd);


// To create a SCON

var $ana_1633_create_SCON = "SVMXC__Service_Contract__c SCON1 = new SVMXC__Service_Contract__c(Name = 'ANA-1633-SCON' , SVMXC__Company__c = '"+$Account+"' , SVMXC__Active__c = True, SVMXC__Start_Date__c = Date.valueOf('2017-01-01') , SVMXC__End_Date__c = Date.valueOf('2018-12-31') );insert SCON1;";
var $ana_1633_result = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_create_SCON , "create");
_wait(1000);
var $ana_1633_query_SCON = "Select Id,Name from SVMXC__Service_Contract__c where Name = 'ANA-1633-SCON'";


var $ana_1633_fetch_SCON  = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_query_SCON,"query");



_log($ana_1633_fetch_SCON);

var $ana_1633_SCON ;
var $var3;
var $varRV1;
var $ana_1633_var1;
$ana_1633_SCON  = $ana_1633_fetch_SCON[0].Id;
var $ana_1633_SCOName = $ana_1633_fetch_SCON[0].Name;
_log($ana_1633_SCON);
_log($ana_1633_SCOName);

	$ana_1633_SCON = $ana_1633_fetch_SCON[0].Id;


_log($ana_1633_SCON);

// Create an IB

var $ana_1633_create_IB = "SVMXC__Installed_Product__c IB01 = new SVMXC__Installed_Product__c(SVMXC__Company__c = '"+$Account+"' , Name = 'ANA-1633-IB' , SVMXC__Status__c = 'Installed');insert IB01;";
var $ana_1633_result_IB  = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_create_IB , "create");

_log($ana_1633_result_IB);
var $ana_1633_get_IB = "Select Id , Name from SVMXC__Installed_Product__c where Name = 'ANA-1633-IB' Limit 1";

var $ana_1633_fetch_IB  = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_get_IB,"query");

var $ana_1633_IB_ID;

	
	$ana_1633_IB_ID = $ana_1633_fetch_IB[0].Id ;



_log($ana_1633_IB_ID);
var $GuranteedUptime = $data[1]["GuranteedUptime"];
// Create Covered Product 
var $ana_1633_create_CP = "SVMXC__Service_Contract_Products__c CP01 = new SVMXC__Service_Contract_Products__c(SVMXC__Installed_Product__c = '"+$ana_1633_IB_ID+"',SVMXC__Service_Contract__c = '"+$ana_1633_SCON+"', Custom_checkbox__c = false , SVMXC__Is_Billable__c = true ); insert CP01;";
var $ana_1633_result_CP = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_create_CP , "create");
var $ana_1633_get_CP = "Select Id , Name from SVMXC__Service_Contract_Products__c where Createdby.Id = '"+$user_meghana+"' Order by CreatedDate DESC Limit 1";
var $ana_1633_fetch_CP   = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_get_CP,"query");
var $ana_1633_cp_ID;

	
	$ana_1633_cp_ID = $ana_1633_fetch_CP[0].Id ;
	
	
$an_act_Contract_Uptime.schedule_notifications("meghana.rao@servicemax.com");

var $ana_1633_ib1_id;
var $ana_1633_scon1_id ;
var $ana_1633_uptime_value ;
var $ana_1633_guranteed_uptime = null;


var $ana_1633_query_RV1 = "Select SVMXC__Installed_Product__c,SVMXC__Contract__c,SVMXC__Gauranteed_Up_Time__c from SVMXC__SPM_Contract_Up_Time__c where SVMXC__Installed_Product__c = '"+$ana_1633_IB_ID+"' AND SVMXC__Contract__c = '"+$ana_1633_SCON+"'";
var $ana_1633_resultRV1 = $op_act_sForceApiCall.sForceQuery($un, $pwd, $ana_1633_query_RV1,"query");

$ana_1633_resultRV1.forEach(function($varRV1) {
	
	$ana_1633_ib1_id = $varRV1.SVMXC__Installed_Product__c;
	$ana_1633_scon1_id = $varRV1.SVMXC__Contract__c;
	$ana_1633_guranteed_uptime = $varRV1.SVMXC__Gauranteed_Up_Time__c;

});

_log($ana_1633_ib1_id);
_log($ana_1633_scon1_id);
_log($ana_1633_guranteed_uptime); 

_assertEqual($ana_1633_IB_ID, $ana_1633_ib1_id);
_assertEqual($ana_1633_SCON,$ana_1633_scon1_id);
_assertEqual($GuranteedUptime,Math.round($ana_1633_guranteed_uptime));


$an_cu_1633.end();





