//Tests are to be written here [Bhupendra Singh Chouhan]
//==============

var $RS_5309 = _testcase("$RS_5309","When the IB of the WO is covered under a Warranty. Labor line qty is defined");
$RS_5309.start();
_setSpeed($g_stepSpeed);

/**
 * Login to the Sandbox Org
 */

$bo_act_login.login($g_url, $bac_un, $bac_pwd);

//Pre - Condition Test Data
var $productFamily = ["--None--","GeneralSolution","AdvSolution","Accessory", "Storage"];
var $productCode = "";
var $exchangeType = ["--None--","Advance Exchange","Return Exchange"];
var $unitOfTimeForCoverage = ["--None--","Days","Weeks","Months","Years"];
var $coverageEffectiveFrom = ["--None--","Date Installed","Date Ordered","Date Shipped","Last Activity Date","Last Date Shipped","Warranty Start Date","Warranty End Date"];
var $materialPercentCovered = 10;
var $laborPercentCovered = 55;
var $expensesPercentCovered = 30;
var $durationOfCoverage = 5;
var $seperator = "/";

/**
* Create Account, Contact, Location, Product and Installed Product
*/
var $accountName = $bo_act_accounts.createAccount();
var $contactName = $bo_act_contacts.createContact($accountName);
var $productName = $bo_act_products.createProduct($productCode, $productFamily[0]);
var $productName1 = $bo_act_products.createProduct($productCode, $productFamily[0]);
var $IBName = $bo_act_installedProduct.createInstalledProduct($productName, $accountName, $contactName);

/**
 * Create 5 Year WN Template
 */
var $warrantyName = $bo_act_warrantyTerms.createWarrantyTerms($exchangeType[2],"10","1",$unitOfTimeForCoverage[4],"55","1",$unitOfTimeForCoverage[4],"50","6",$unitOfTimeForCoverage[3],$coverageEffectiveFrom[1]);
$bo_act_warrantyTerms.createApplicableProducts($productName, $warrantyName); //Create Applicable product for warranty Terms
$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($IBName); 	//Navigate to Installed Product Page using global search
$bo_act_warrantyTerms.createWarranty($warrantyName);

/**
* Create Activity Master and Edit Service Price book
*/
var $activityType = ["--None--","Calibration","Cleanup","Installation","Repair","Service"];
var $unit = ["--None--","Per Hour","Flat Rate"];
var $activityProduct = "";
var $regularRate = 18.5;
var $regularRate1 = 15.5;

var $activityID = $bo_act_activityMaster.createActivityMasterUsingProduct($activityType[1], $productName);
var $activityID1 = $bo_act_activityMaster.createActivityMasterUsingProduct($activityType[3], $productName1);
var $ServicePriceBookName = $bo_act_servicePricebooks.addNewServicePricebooks($unit[1], $activityID, $activityProduct, $regularRate);
var $ServicePricebooksEntryNumber = $bo_act_servicePricebooks.editStandardServicePricebooks($ServicePriceBookName, $unit[1], $activityID1, $activityProduct, $regularRate1);
/**
 * Configure the Group Profile SET004 and SET017
 */
//var $groupProfileName = "AutoBACGroup";
var $Module = "Work Order";
var $SubModule = "Create Work Order Lines VF";
var $Setting = "SET017";
var $settingValue = $ServicePriceBookName;
$bo_act_configurationProfiles.editGroupProfileForTextSettings($groupProfileName, $Module, $SubModule, $Setting, $settingValue);

/**
* Create Case record
*/
var $caseStatus = "New";
var $casePriority = "Medium";
var $caseOrigin = "Phone";
var $caseNumber = $bo_act_Cases.createCase($caseStatus, $casePriority, $caseOrigin);

/**
* Create SFM Wizard for WO with two Steps 1st-Check Entitlement and 2nd- Manage Work Order Lines - Usage(TDM016)
*/
var $wizardTitleName = $bo_act_common.generateRandomName("SFWTitle");
var $wizardIDName = $bo_act_common.generateRandomName("SFWId");
var $fieldActnType = "Others";
var $actnName = "Check Entitlement WO";

$bo_act_navigation.navigateToSfmWizard();
$bo_act_SFW.createWizardGeneralInfo("Work Order", $wizardTitleName, $wizardIDName);
$bo_act_SFW.createWizardStep("SFM", "Manage Work Order Lines - Usage", "Interactive");
$bo_act_SFW.addCustomActionToWizard($fieldActnType, $actnName);
$bo_act_SFW.quickSaveSFWizard();

//Navigate to IB and Create WO from IB
var $WONumber = $bo_act_installedProduct.createWOFromIB($IBName);

//Edit The Above created WO for few fields
$bo_act_workOrders.editWorkOrder($WONumber);

// Edit WO for Case 
var $object = _textbox("/\\*Case|^Case/");
var $objectValue = $caseNumber;
$bo_act_workOrders.updateTextBoxFields($object, $objectValue);

// Edit WO for Priority
var $object = _select(0,_rightOf(_label("/\\*Priority|^Priority/")));
var $objectValue = "Medium";
$bo_act_workOrders.updateDropDownFields($object, $objectValue);

// Edit WO for Billing Type
var $object = _select(0,_rightOf(_label("Billing Type")));
var $objectValue = "Paid";
$bo_act_workOrders.updateDropDownFields($object, $objectValue);
$bo_act_workOrders.saveWorkOrder();     		// Save the Edited WO

/**
*Perform Interactive Entitlement on WO using "Warranty
*/
$bo_act_interactiveEntitlement_WO.performInteractiveEntitlementWO_UsingWarranty($WONumber, $warrantyName);
var $actual_EntitlementType = _getText(_div(0,_rightOf(_cell("/Entitlement Type/"))));
var $actual_EntitlementType = _getText(_div(0,_rightOf(_cell("/Entitlement Type/"))));

_assertEqual($actual_EntitlementType,"INTERACTIVE","Actual and expected Entitlement Type are not same");

//validation of Entitlement Parameters On Case

if(_isVisible(_image("Checked",_rightOf(_cell("/Is Entitlement Performed/"))))){
	_logOutput("Entitlement is Performed Successfully = PASS");
	}else{
	_fail("Entitlement is Not Performed = Failed");
	}

/**
*Invoke TDMo16 SFM for Get Price Calculation when "Incident Not Covered"
*/
$bo_act_getPrice.navigateToSFMDeliveryPageFor_TDM016($WONumber);

//Add Labor Line to Above invoke TDM016 SFM
var $searchValue = $productName;
var $activityType = $activityType[1];
var $lineQty = "5";
$bo_act_getPrice.addLaborLineUsingLintQtyToSFMDelivery($searchValue, $activityType, $lineQty);
$bo_act_getPrice.calculateGetPrice();
$bo_pg_getPrice.btn_quickSave;

//Validation of Get Price for Labor lines
$bo_act_getPrice.editLaborLineToSFMDelivery($searchValue);

var $LaborLinePricePerUnitActual = _getText(_textbox(0,_rightOf(_label("/Line Price Per Unit/"))));
var $LaborCoveredActual = _getText(_textbox(0,_rightOf(_label("/Covered %/"))));
var $LaborBillableQtyActual = _getText(_textbox(0,_rightOf(_label("/Billable Qty/"))));
var $LaborBillableLinePriceActual = _getText(_textbox(0,_rightOf(_label("/Billable Line Price/"))));

var $LaborBillableLinePriceExpected = (($lineQty*$regularRate*45)/100);

_assertEqual($LaborLinePricePerUnitActual,$regularRate,"Actual and expected Labor Line Price Per Unit are not same");
_assertEqual($LaborBillableQtyActual,$lineQty,"Actual and expected Billable Qty are not same");
_assertEqual($LaborBillableLinePriceActual,$LaborBillableLinePriceExpected,"Actual and expected Billable Line Price are not same");
_assertEqual($LaborCoveredActual,"55","Actual and expected labor Covered % are not same");

$bo_act_getPrice.closeEditedWOLineToSFMDelivery();

//Add Second Labor Line to Above invoke TDM016 SFM
var $searchValue1 = $productName1;
var $activityType1 = $activityType[3];
var $lineQty1 = "3";
$bo_act_getPrice.addSecondLaborLineUsingLintQtyToSFMDelivery($searchValue1, $activityType1, $lineQty1);
$bo_act_getPrice.calculateGetPrice();
$bo_pg_getPrice.btn_quickSave;

//Validation of Get Price for 2nd Labor lines
$bo_act_getPrice.editLaborLineToSFMDelivery($searchValue1);

var $LaborLinePricePerUnitActual1 = _getText(_textbox(0,_rightOf(_label("/Line Price Per Unit/"))));
var $LaborCoveredActual1 = _getText(_textbox(0,_rightOf(_label("/Covered %/"))));
var $LaborBillableQtyActual1 = _getText(_textbox(0,_rightOf(_label("/Billable Qty/"))));
var $LaborBillableLinePriceActual1 = _getText(_textbox(0,_rightOf(_label("/Billable Line Price/"))));

var $LaborBillableLinePriceExpected1 = (($lineQty1*$regularRate1*45)/100);

_assertEqual($LaborLinePricePerUnitActual1,$regularRate1,"Actual and expected Labor Line Price Per Unit are not same");
_assertEqual($LaborBillableQtyActual1,$lineQty1,"Actual and expected Billable Qty are not same");
_assertEqual($LaborBillableLinePriceActual1,$LaborBillableLinePriceExpected1,"Actual and expected Billable Line Price are not same");
_assertEqual($LaborCoveredActual1,"55","Actual and expected labor Covered % are not same");

$bo_act_getPrice.closeEditedWOLineToSFMDelivery();

$bo_act_getPrice.saveSFMDelivery();

//Delete SFM Wizard 
$bo_act_SFW.deleteSFMWizard("Work Order", $wizardIDName);

/**
*Clean up function
*/

$bo_act_common.deleteCase($bac_un, $bac_pwd,$caseNumber);
$bo_act_common.deleteAccount($bac_un, $bac_pwd, $accountName);
$bo_act_common.deleteContact($bac_un, $bac_pwd, $contactName);
$bo_act_common.deleteIB($bac_un, $bac_pwd, $orgnamespace,$IBName);
$bo_act_common.deleteProduct($bac_un, $bac_pwd,$productName);
$bo_act_common.deleteProduct($bac_un, $bac_pwd,$productName1);
$bo_act_common.deleteWorkOrder($bac_un, $bac_pwd, $orgnamespace,$WONumber);
$bo_act_common.deleteWarranty($bac_un, $bac_pwd, $orgnamespace,$warrantyName);

//var $datacreated = [$WONumber,$caseNumber,$IBName,$productName,$productName1,$contactName,$accountName,$warrantyName];
//for (var i = 0; i < $datacreated.length; i++) {
//$bo_act_common.cleanUpfunction($datacreated[i]);
//}

//Deleting the above created data

/*$bo_act_activityMaster.deleteActivityMaster($activityID);
$bo_act_activityMaster.deleteActivityMaster($activityID1);
$bo_act_servicePricebooks.deleteCustomServicePricebooks($ServicePriceBookName);*/

$bo_act_login.logOut(); 

$RS_5309.end();

