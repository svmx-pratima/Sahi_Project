//Tests are to be written here [Bhupendra Singh Chouhan]
//==============

//Pre - Condition Test Data
var $recordType = ["Depot","Depot Child","Depot Parent","Standard Location"];
var $productFamily = ["--None--","GeneralSolution","AdvSolution","Accessory", "Storage"];
var $productCode = "";
var $coverageEffectiveFrom = ["--None--","Date Installed","Date Ordered","Date Shipped","Last Activity Date","Last Date Shipped","Warranty Start Date","Warranty End Date"];
var $seperator = "/";

var $RS_7290 = _testcase("$RS_7290","Creation and Activation of Service Contracts");
$RS_7290.start();
_setSpeed($g_stepSpeed);
/**
* Login to the Sandbox Org
*/

$bo_act_login.login($g_url, $bac_un, $bac_pwd);

/**
 * Create Account, Contact, Location, Product and Installed Product
 */
var $accountName = $bo_act_accounts.createAccount();
var $contactName = $bo_act_contacts.createContact($accountName);
var $locationName = $bo_act_locations.createLocation($recordType[3],$accountName,"#007","India","560001");
var $productName = $bo_act_products.createProduct($productCode, $productFamily[0]);
var $IBName = $bo_act_installedProduct.createInstalledProduct($productName, $accountName, $contactName);

//Create 1st SLA Term SLA01 [Platinum SLA]
var $slaName01 = $bo_act_slaTerms.createSlaTerms("Default");
$bo_act_slaTerms.addInitialResponseToSLA($slaName01,"WorkOrder","Field Service","Medium","Created Date","5","10","SLA");
$bo_act_slaTerms.addOnsiteResponseToSLA($slaName01,"WorkOrder","Field Service","Medium","Created Date","10","15","SLA");

//validation of SLA creation
_assertExists(_span($slaName01));

//Create 2nd SLA Term SLA02 [Gold SLA]
var $slaName02 = $bo_act_slaTerms.createSlaTerms("Default");
$bo_act_slaTerms.addInitialResponseToSLA($slaName02,"WorkOrder","Field Service","Medium","Created Date","5","10","SLA");
$bo_act_slaTerms.addOnsiteResponseToSLA($slaName02,"WorkOrder","Field Service","Medium","Created Date","10","15","SLA");

//validation of SLA creation
_assertExists(_span($slaName02));

//Create 3rd SLA Term SLA03 [Silver SLA]
var $slaName03 = $bo_act_slaTerms.createSlaTerms("Default");
$bo_act_slaTerms.addInitialResponseToSLA($slaName03,"WorkOrder","Field Service","Medium","Created Date","5","10","SLA");
$bo_act_slaTerms.addOnsiteResponseToSLA($slaName03,"WorkOrder","Field Service","Medium","Created Date","10","15","SLA");

//validation of SLA creation
_assertExists(_span($slaName03));

var $pastYear = 2;  // Start Date for Service Contract
var $futureYear = 2;  // End Date for Service Contract

// Creation of Service Contracts
var $serviceConractName = $bo_act_serviceMaintenanceContracts.createServiceMaintenanceContract($accountName, $slaName01, $futureYear, $pastYear);

//Activating Created Service Contract
$bo_act_serviceMaintenanceContracts.activateServiceContract($serviceConractName);

// Add Covered Product to Service Contract 

var $pastYear =   3;  			// Start Date 'TODAY's' Date - 3 YEARS
var $futureYear = 3;			// End Date 'TODAY's' Date + 3 YEARS

$bo_act_serviceMaintenanceContracts.AddCoveredProducToServiceContract($serviceConractName, $IBName, $slaName02, $pastYear, $futureYear);

//Add Covered Location to Service Contract 

var $pastYear =   5;  			// Start Date 'TODAY's' Date - 5 YEARS
var $futureYear = 5;			//End Date 'TODAY's' Date + 5 YEARS

$bo_act_serviceMaintenanceContracts.addCoveredLocationToServiceContract($serviceConractName, $locationName, $slaName03, $pastYear, $futureYear);

//Add Entitled Contact to Service Contract 

$bo_act_serviceMaintenanceContracts.addEntitledContactsToServiceContract($serviceConractName, $contactName);
$bo_act_navigation.navigateToServiceMaintenanceContractPage();
_click(_link($serviceConractName));
_wait(15000, _isVisible($bo_pg_serviceMaintenanceContracts.btn_newCoveredProduct));

var $expecctedIBUnder_CoveredProduct =  _getText(_link(0,_under(_tableHeader("Installed Product"))));
var $expecctedLocationUnder_CoveredLocations =  _getText(_link(0,_under(_tableHeader("Location"))));;
var $expecctedContactUnder_EntitledContacts =  _getText(_link(0,_under(_tableHeader("Contact"))));;


//validation
//Validating the Covered Products Percent on Scon
_assertEqual($expecctedIBUnder_CoveredProduct,$IBName,"Actual and expected covered Products are not same");

//Validating the Covered Locations Percent on Scon
_assertEqual($expecctedLocationUnder_CoveredLocations,$locationName,"Actual and expected covered Locations are not same");

//Validating the Entitled Contacts Percent on Scon
_assertEqual($expecctedContactUnder_EntitledContacts,$contactName,"Actual and expected Entitled Contacts are not same");

//Clean up function

$bo_act_common.deleteAccount($bac_un, $bac_pwd, $accountName);
$bo_act_common.deleteContact($bac_un, $bac_pwd, $contactName);
$bo_act_common.deleteIB($bac_un, $bac_pwd, $orgnamespace,$IBName);
$bo_act_common.deleteProduct($bac_un, $bac_pwd,$productName);
$bo_act_common.deleteSLA($bac_un, $bac_pwd, $orgnamespace, $slaName03);
$bo_act_common.deleteSLA($bac_un, $bac_pwd, $orgnamespace, $slaName02);
$bo_act_common.deleteSLA($bac_un, $bac_pwd, $orgnamespace, $slaName01);
$bo_act_common.deleteLocation($bac_un, $bac_pwd, $orgnamespace,$locationName);
$bo_act_common.deleteSCON($bac_un, $bac_pwd, $orgnamespace,$serviceConractName);

//var $datacreated = [$warrantyName,$IBName,$locationName,$productName,$contactName,$accountName,];
//var $datacreated = [$serviceConractName, $slaName03, $slaName02, $slaName01, $IBName,$productName,$locationName, $contactName,$accountName,];
//for (var i = 0; i < $datacreated.length; i++) {
//	$bo_act_common.cleanUpfunction($datacreated[i]);
//}
$bo_act_login.logOut();

$RS_7290.end();

