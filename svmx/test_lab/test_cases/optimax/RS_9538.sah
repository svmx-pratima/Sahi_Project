//Assuming that dispatch process is already created & the criteria is Order Type = Cleaning or Repair

var $user_credentials = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "User_Details","","");
var $work_Orders_Xl = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "RS_6666_RS_6667","","");
var $dispatch_Process_Xl = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "Dispatch_Process","","");

for(var $i=0;$i<$user_credentials.length;$i++)
{
var $g_un = $user_credentials[$i][0];
var $g_pwd = $user_credentials[$i][1];
var $g_url = $user_credentials[$i][2];
}


var $dp_Name = $dispatch_Process_Xl[0][0];
var $dp_Id = $dispatch_Process_Xl[0][1];
var $dp_Territory_Id = $dispatch_Process_Xl[0][2];


var $RS_9538 = _testcase("RS_9538", "Travel Time Back to Home Base (Mins) in ServiceMax event fields should get update");

$RS_9538.start();

var $sfdc_sessionId = null;

$bo_act_login.login($g_url, $g_un, $g_pwd);


_set($login_result, _fetch(login($g_un,$g_pwd)));
_log($login_result);

$op_utility.delete_WO($dp_Id,$login_result.sessionId);

_set($create_WO, _fetch(create_WO($work_Orders_Xl , $dp_Territory_Id, $dp_Id)));
_log($create_WO);

$op_utility.run_Job_Now($dp_Name);

_wait(5000);

//validating the job is success
if($op_utility.validate_Job_Success($dp_Id,$login_result.sessionId,200000)=== true){
	_log("job is successfully completed");
	_set($validate_DriveTime, _fetch(validate_ReturnTime($dp_Id)));
	_log($validate_DriveTime);
	if($validate_DriveTime === true)
	{
		_log("Return Drive Time Calculated");
		
	}
	else{
		_logExceptionAsFailure("Return Drive Time is Not Calculated");
	}
}
else{
	_log("job is failed in 1st verification.. so starting the 2nd verification after 5 min");
	if($op_utility.validate_Job_Success($dp_Id,$login_result.sessionId,200000)=== true){
		_log("job is successfully completed");
		_set($validate_DriveTime, _fetch(validate_ReturnTime($dp_Id)));
		_log($validate_DriveTime);
		if($validate_DriveTime === true)
		{
			_log("Return Drive Time Calculated");
			
		}
		else{
			_logExceptionAsFailure("Return Drive Time is Not Calculated");
		}
	}
	else{
		_log("job is failed in 2nd verification");
	}
}


//<browser>
function login($g_un,$g_pwd){
	
	var $login_result = sforce.connection.login($g_un,$g_pwd);
	$sfdc_sessionId = $login_result.sessionId;
	_log("$sfdc_sessionId = "+$sfdc_sessionId);
	return $login_result;
} 


function create_WO ($work_Orders_Xl , $dp_Territory_Id, $dp_Id)
{
	var CreateWO=[];
	var UpdateWO=[];
	var $isSuccess = false;

	//creating wo from the excel sheet
	
		var wo_list = new sforce.SObject("SVMXC__Service_Order__c");
		wo_list.SVMXC__Order_Type__c = $work_Orders_Xl[0][0];
		wo_list.SVMXC__Order_Status__c = $work_Orders_Xl[0][1];
		wo_list.SVMXC__Street__c = $work_Orders_Xl[0][2];
		wo_list.SVMXC__State__c = $work_Orders_Xl[0][3];
		wo_list.SVMXC__City__c = $work_Orders_Xl[0][4];
		wo_list.SVMXC__Zip__c = $work_Orders_Xl[0][5];
		wo_list.SVMXC__Country__c = $work_Orders_Xl[0][6];
		wo_list.SVMXC__SM_Scheduling_Options__c = $work_Orders_Xl[0][7];
		wo_list.SVMXC__Primary_Territory__c = $dp_Territory_Id;
		result = sforce.connection.create([wo_list]);

		_log("Work Orders Created = "+ result.length);
		_log(result[0].id);
		 $workorder = result[0].id;
		 _log($workorder);
			
		return $workorder;
}


function validate_ReturnTime($dp_Id)
{
	var $isSuccess = false;
	var WO_List = _call(sforce.connection.query("Select Id From SVMXC__Service_Order__c Where SVMXC__Dispatch_Process__c = '"+$dp_Id+"'"));
	var WO_arr = WO_List.getArray("records");
	var WO_Id = WO_arr[0].Id;
	_log(WO_Id);
	
	var Event_List = _call(sforce.connection.query("SELECT SVMXC__Driving_Time_Home__c FROM SVMXC__SVMX_Event__c where SVMXC__Service_Order__c ='"+WO_Id+"'"));
	var Event_arr = Event_List.getArray("records");
	
	var DriveTime = Event_arr[0].SVMXC__Driving_Time_Home__c;
	
	_log(DriveTime);
	
	if(DriveTime > 0)
		{
		_log(DriveTime);
		$isSuccess = true;
		}
_log($isSuccess);
	return $isSuccess;
}
//</browser>

$bo_act_login.logOut();

$RS_9538.end();