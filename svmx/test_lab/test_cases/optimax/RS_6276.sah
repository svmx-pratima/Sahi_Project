var $user_credentials = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "User_Details","","");
var $work_Orders_Xl = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "RS_6299_RS_6300","","");
var $DispatchProcessData = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "Dispatch_Process","","");

//var $nArr;
//Calling the sforce API
for(var $i=0;$i<$user_credentials.length;$i++)
{
var $g_un = $user_credentials[$i][0];
var $g_pwd = $user_credentials[$i][1];
var $g_url = $user_credentials[$i][2];
}

var $wo_type = $work_Orders_Xl[0][0];
var $wo_status = $work_Orders_Xl[0][1];
var $wo_state = $work_Orders_Xl[0][2];


var $RS_6276 = _testcase("RS_6276", "Allow Work Orders which do not have Technicians with required skill");

$RS_6276.start();

$bo_act_login.login($g_url, $g_un, $g_pwd);
var $PrimaryTerr = $DispatchProcessData[0][2];

_click(_link("ServiceMax Setup"));
_wait(20000, _isVisible(_div("Configuration Profiles")));
_click(_div("Configuration Profiles"));
$op_utility.search_ActiveProfile();
_click(_submit("Edit"));
_setSelected(_select("conf_prof:F_conf_prof:Setting_Block:j_id114:j_id115:Modulelist"), "OptiMax");
_click(_div("pbBody[1]"));
_setSelected(_select("conf_prof:F_conf_prof:Setting_Block:j_id114:j_id122:SubModulelist"), "Dispatch Calculations");
_click(_link("Edit[40]"));
_selectWindow("Servicemax_Conf_Prof");
_setSelected(_select("disp_setting:disp_setting:j_id1:DispSection:j_id42:Options"), "Allow");
_click(_button("Save"));
_click(_submit("Close"));
_selectWindow();

_setSelected(_select("conf_prof:F_conf_prof:Setting_Block:j_id114:j_id115:Modulelist"), "OptiMax");
_click(_cell("bodyCell"));
_setSelected(_select("conf_prof:F_conf_prof:Setting_Block:j_id114:j_id122:SubModulelist"), "Manage OptiMax Settings");
_click(_link("Edit[13]"));
_selectWindow("Servicemax_Conf_Prof");
_check(_radio("disp_setting:disp_setting:j_id1:DispSection:j_id37:j_id40"));
_click(_button("Save"));
_click(_submit("Close"));
_selectWindow();
_click(_button("Refresh"));
_click(_submit("Save"));
_click(_submit("Back To Setup Home"));

_set($login_result, _fetch(login($g_un,$g_pwd)));
_log($login_result);

_set($create_WO, _fetch(create_WO($wo_type , $wo_status, $PrimaryTerr, $wo_state)));
_log($create_WO);


$bo_act_login.logOut();

//<browser>
function login($g_un,$g_pwd){
	
	var $login_result = sforce.connection.login($g_un,$g_pwd);
	return $login_result;
}

function create_WO ($wo_type , $wo_status, $PrimaryTerr , $wo_state)
{
	var workorder = new sforce.SObject("SVMXC__Service_Order__c");
	workorder.SVMXC__Order_Type__c = $wo_type;
	workorder.SVMXC__Order_Status__c = $wo_status;
	workorder.SVMXC__Primary_Territory__c = $PrimaryTerr;
	workorder.SVMXC__State__c = $wo_state;
	result = sforce.connection.create([workorder]);
		
	var WO_List = sforce.connection.query("Select Id, SVMXC__Primary_Territory__c, SVMXC__Order_Type__c, SVMXC__Order_Status__c, SVMXC__QTL_Status__c From SVMXC__Service_Order__c Where Id = '" +result[0].id+"'");
	var WO_arr = WO_List.getArray("records");
	
	_log(result[0].id)
	
		var WO = WO_arr[0];
		_log("SVMXC__Order_Type__c = "+WO.SVMXC__Order_Type__c+" , SVMXC__Order_Status__c = "+WO.SVMXC__Order_Status__c+ ", SVMXC__QTL_Status__c = "+WO.SVMXC__QTL_Status__c);
		if(WO.SVMXC__Order_Type__c === 'Cleaning' & WO.SVMXC__Order_Status__c === 'Open' & WO.SVMXC__QTL_Status__c === 'No Qualified Technicians (Allow)')
		{
			_log("QTL Status populated as : " + WO.SVMXC__QTL_Status__c);
		}
		else
		{
			
			_fail("QTL Status not calculated correctly");
		}
	

	return WO.id;
}	
//</browser>
$RS_6276.end();
