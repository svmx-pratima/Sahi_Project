var $user_credentials = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "User_Details","","");
var $Dispatch_Process = $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "Dispatch_Process","","");
var $Installed_Product= $excel.readFromCustomExcel("../optimax/op_excleData/automation.xlsx", "Installed_Product","","");
//var $nArr;
//Calling the sforce API
for(var $i=0;$i<$user_credentials.length;$i++)
{
var $g_un = $user_credentials[$i][0];
var $g_pwd = $user_credentials[$i][1];
var $g_url = $user_credentials[$i][2];
}

//for(var $i=0;$i<$Dispatch_Process.length;$i++)
//{
var $dp_Name = $Dispatch_Process[0][0];
var $dp_Id = $Dispatch_Process[0][1];
var $dp_Terr_Id = $Dispatch_Process[0][2];
//}

for(var $i=0;$i<$Installed_Product.length;$i++)
{
var $ib_Id = $Installed_Product[$i][0];
}

var $RS_6656 = _testcase("RS_6656", "Scheduled technician doesn't match the product serviced");
var $team = null;
$RS_6656.start();

var $sfdc_sessionId = null;

$bo_act_login.login($g_url, $g_un, $g_pwd);

_set($login_result, _fetch(login($g_un,$g_pwd)));
_log($login_result);

//deleting existing Work Order

$op_utility.delete_WO($dp_Id,$login_result.sessionId);

_set($create_team, _fetch(create_Team($dp_Terr_Id,$ib_Id)));
_log($create_team);

$op_utility.run_Job_Now($dp_Name);

_wait(5000);

//validating the job is success
if($op_utility.validate_Job_Success($dp_Id,$login_result.sessionId,120000)=== true){
	_log("job is successfully completed");
	_set($validate_Pdt_Vio_WO, _fetch(validate_Pdt_Violation($dp_Id)));
	_log($validate_Pdt_Vio_WO);
	if($validate_Pdt_Vio_WO === true){
		_log("Product Violation is populated ");
		                           	}
	else{
		_logExceptionAsFailure("Product Violation is not populated");
	}
}
else{
	_log("job is failed in 1st verification.. so starting the 2nd verification after 5 min");
	if($op_utility.validate_Job_Success($dp_Id,$login_result.sessionId,120000)=== true){
		_log("job is successfully completed in 2nd verification");
		_set($validate_Pdt_Vio_WO, _fetch(validate_Pdt_Violation($dp_Id)));
		_log($validate_Pdt_Vio_WO);
		if($validate_Pdt_Vio_WO === true){
			_log("Violation is populated");
		}
		else{
			_logExceptionAsFailure(" Product Violation is not populated")
		}
	}
	else{
		_log("job is failed in 2nd verification");
	}
}
	



//<browser>


function login($g_un,$g_pwd){
	
	var $login_result = sforce.connection.login($g_un,$g_pwd);
	$sfdc_sessionId = $login_result.sessionId;
	_log("$sfdc_sessionId = "+$sfdc_sessionId);
	return $login_result;
}

function create_Team ($dp_Terr_Id,$ib_Id){
	

	// Creating Work order's with Installed Product
	   var CreateRecords=[];
	   for(var $i=0;$i<10;$i++)
		{
	   var WO = new sforce.SObject("SVMXC__Service_Order__c");
	   WO.SVMXC__Primary_Territory__c=$dp_Terr_Id;
	   WO.SVMXC__Order_Type__c="Cleaning";
	   WO.SVMXC__Order_Status__c='Open';
	   WO.SVMXC__State__c="TX";
	   WO.SVMXC__Component__c=$ib_Id;
	   WO.SVMXC__Zip__c='75024';
	   WO.SVMXC__Country__c="United States";
	   CreateRecords.push(WO);
		}
	   var result_WO = sforce.connection.create(CreateRecords);
	   _log(" Work order = "+result_WO.length);
	   
	   
	   
return result_WO[0].id;

}
function validate_Pdt_Violation($dp_Id){
	var $isSuccess = false;
	var $i = 0;
	var WO_List = _call(sforce.connection.query("Select Id, SVMXC__Violation_Message__c from SVMXC__Service_Order__c Where SVMXC__Dispatch_Process__c = '"+$dp_Id+"'"));
	var WO_arr = WO_List.getArray("records");
	_log("WO_arr.length="+WO_arr.length);
	for(var $x=0;$x<WO_arr.length;$x++){
		var WO = WO_arr[$x];
		var violation_str = WO.SVMXC__Violation_Message__c;
		_log("Violation message="+WO.SVMXC__Violation_Message__c+",violation_st =" +violation_str);
		if(violation_str.includes(" Product Expertise")){
			 
			$i = $i + 1;
			_log("$i="+$i);
		}
	}
	if($i === 10){
		$isSuccess = true;
	}
	return $isSuccess;
}


//</browser>
$RS_6656.end();