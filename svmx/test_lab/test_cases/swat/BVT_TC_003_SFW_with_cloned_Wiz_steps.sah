//*******************************//
//
//Author	:- 	Shashikala Kamath
//Pre-Req	:-	
//Steps		:-	
//
//*******************************//


var $BVT_TC_003_SFW_with_cloned_Wiz_steps = _testcase("BVT_TC_003_SFW_with_cloned_Wiz_steps",
		"Configure the SFW to include cloned/custom SFMs and launch the same in delivery");
$BVT_TC_003_SFW_with_cloned_Wiz_steps.start();
	_setSpeed($g_stepSpeed);



	//Pre - Condition 
	$bo_act_login.login("https://test.salesforce.com","bc@admin.com.fsapart2", "fsa123456");
	
	var $wizardObject = "Work Order";//remove later
	var $caseNumber = $bo_act_Cases.createCase("New", "High", "Email");
	var $accountName = $bo_act_accounts.createAccount();
	var $contactName = $bo_act_contacts.createContact($accountName);
	
		/*var $runData = $excel.readFromCustomExcel("/Swat_excelData/swatdata.xlsx",  "runData", true, true);
		var $caseNumber=$runData[1]["Case"];
		var $accountName=$runData[1]["Account"];
		var $contactName=$runData[1]["Contact"];
	
		_log("Case: "+$caseNumber);
		_log("Account: "+$accountName);
		_log("Contact: "+$contactName); 
		*/
	
	
	
	
	var $productName =$bo_act_products.createProduct();
	
	var $standardPriceValue = 120;
	$bo_act_products.addStandardPriceForProduct($productName, $standardPriceValue);
	
	var $IBName = $bo_act_installedProduct.createInstalledProduct($productName,$accountName,$contactName);
	
	//var $wizardName_swat = "Swat Smoke Test BVT_TC_003";
	var $isCustom = false;
	
	var $wizardIDName = $bo_act_common.generateRandomName("Swat Smoke Test BVT_TC_003");
	var $wizardIDName1 = $bo_act_common.generateRandomName("Swat Smoke Test BVT_TC_003");
	var $wizardStep1Type = "SFM";
	var $wizardStep2Type = "Output Document";
	var $executionMode1 = "Interactive";
	var $executionMode2 = "Background";
	var $handOver1 = true;
	var $handOver2 = false;
	$selectTemplateAtRunTime = false; 
	
	
	var $sfmToBeCloned1 = "Create Quote from Work Order";
	var $sfmName1 = $bo_act_common.generateRandomName("Create_Quote_from_Work_Order");
	var $sfmTemplateSaveAsName1 = $sfmName1;	
	var $sfmTemplate1 = "SVMXSTD: Manage Quote Lines";   
	
	
	var $sfmToBeCloned2 = "Manage Work Order Lines - Usage";
	var $sfmName2 = $bo_act_common.generateRandomName("Manage_WO_Lines_Usage");
	var $sfmTemplateSaveAsName2 = $sfmName2;
	var $sfmTemplate2 = "SVMXSTD: Manage WO Usage Lines"; 
	
	var $sfmToBeCloned3 ="Create Usage Lines from Estimates";
	var $sfmName3 = $bo_act_common.generateRandomName("Create_Usage_Lines_from_Estimates");
	var $sfmTemplateSaveAsName3 = $sfmName3;
	var $sfmTemplate3 = "SVMXSTD: Create Usage from Estimates";    
	
	var $sfmToBeCloned4 ="Work Order Service Report";
	var $sfmName4 = $bo_act_common.generateRandomName("Work_Order_Service_Report");
	var $sfmTemplateSaveAsName4 = $sfmName4;
	var $sfmTemplate4 = "Work Order Service Report"; 
	
	var $sfmToBeCloned5 ="Create New Shipment Order";
	var $sfmName5 = $bo_act_common.generateRandomName("Create_New_Shipment_Order");
	var $sfmTemplateSaveAsName5 = $sfmName5;
	var $sfmTemplate5 = "SVMXSTD: Create Shipment from RMA";    
	
	
	$sfm_act_SFM.cloneTDM016($sfmToBeCloned1, $sfmName1, $isCustom, $sfmTemplateSaveAsName1, $sfmTemplate1, "", "");
	$sfm_act_SFM.cloneTDM016($sfmToBeCloned2, $sfmName2, $isCustom, $sfmTemplateSaveAsName2, $sfmTemplate2, "", "");
	$sfm_act_SFM.cloneTDM016($sfmToBeCloned3, $sfmName3, $isCustom, $sfmTemplateSaveAsName3, $sfmTemplate3, "", "");
	$sfm_act_SFM.cloneTDM016($sfmToBeCloned5, $sfmName5, $isCustom, $sfmTemplateSaveAsName5, $sfmTemplate5, "", "");
	$swat_act_workOrderServiceReport.cloneWOServiceReport($sfmToBeCloned4, $sfmName4, $isCustom, $sfmTemplateSaveAsName4, $sfmTemplate4, "", "");
	
	_click(_link("Home"));
	
	//Create SFM Wizard and add the above created SFM process to the wizard steps
	
	$bo_act_navigation.navigateToSfmWizard();
	$bo_act_SFW.createWizardGeneralInfo($wizardObject, $wizardIDName, $wizardIDName1);
	$bo_act_SFW.createSFMWizardStepwithHandOver($wizardStep1Type, $sfmTemplateSaveAsName1, $executionMode1, $handOver1);
	$bo_act_SFW.createSFMWizardStepwithHandOver($wizardStep1Type, $sfmTemplateSaveAsName2, $executionMode1, $handOver1); 
	$bo_act_SFW.createSFMWizardStepwithHandOver($wizardStep1Type, $sfmTemplateSaveAsName3, $executionMode1, $handOver1);
	$bo_act_SFW.createOutputDocumentWizardStepwithSelectTemplate($wizardStep2Type, $sfmTemplateSaveAsName4, $selectTemplateAtRunTime); 
	//$bo_act_navigation.navigateToSfmWizard();
	
	var $fieldActnType = "Others";
	var $actnName = "Check Entitlement WO";
	$bo_act_SFW.addCustomActionToWizard($fieldActnType, $actnName);
	$bo_act_SFW.quickSaveSFWizard();
	$bo_act_SFW.saveAndClose();
	
	
	//Create SLA Terms
	var $slaName = $bo_act_slaTerms.createSlaTerms("Default");
	$bo_act_slaTerms.addInitialResponseToSLA($slaName,"WorkOrder","Field Service","Medium","Created Date","5","10","SLA");
	$bo_act_slaTerms.addOnsiteResponseToSLA($slaName,"WorkOrder","Field Service","Medium","Created Date","10","15","SLA");
	
	//validation of SLA creation
	_assertExists(_span($slaName));
	
	/**
		* Add Price To Standard Price for above created Product
		*/ 
	
	//Launch in delivery
	 
	 
	
	$workOrderNo = $swat_act_workOrders.createWorkOrder($caseNumber, $accountName, $contactName, $IBName, "Open", "High", "Field Service");
	//$woName = 
	
	//Create Service Contract(With child lines) and Activate it
	var $pastYear = 2;  // Start Date for Service Contract
	var $futureYear = 2;  // End Date for Service Contract
	
	// Creation of Service Contracts
	var $serviceContractName = $bo_act_serviceMaintenanceContracts.createServiceMaintenanceContract($accountName, $slaName, $futureYear, $pastYear);
	
	// Activating Created Service Contract
	$bo_act_serviceMaintenanceContracts.activateServiceContract($serviceContractName);
	
	//Add Covered Product to Service Contract 
	
	var $pastYear = 3;  			// Start Date 'TODAY's' Date - 3 YEARS
	var $futureYear = 3;			// End Date 'TODAY's' Date + 3 YEARS
	$bo_act_serviceMaintenanceContracts.AddCoveredProducToServiceContract($serviceContractName, $IBName, $slaName, $pastYear, $futureYear);
	
	//Add Entitled Contact to Service Contract 
	$bo_act_serviceMaintenanceContracts.addEntitledContactsToServiceContract($serviceContractName, $contactName);
	
	// Add Parts Pricing To Service Contract 
	var $pricePerUnit = 150;
	$bo_act_serviceMaintenanceContracts.addPartsPricingToServiceContract($serviceContractName, $productName, $pricePerUnit);
	

	

	$bo_act_interactiveEntitlement_WO.performInteractiveEntitlementWO_UsingScon($workOrderNo, $serviceContractName);
	var $actual_EntitlementType = _getText(_div(0,_rightOf(_cell("/Entitlement Type/"))));
	var $ServiceContract_actual = _getText(_link(0,_rightOf(_cell("Service Contract"))));
	_assertEqual($actual_EntitlementType,"INTERACTIVE","Actual and expected Entitlement Type are same");
	_assertEqual($ServiceContract_actual,$serviceContractName,"Actual and expected Service Conract are same");
	
	_wait(20000);
	
	/**
	 * Temp commenting below statement as global search is not working
	 */
	//$sfm_act_common.globalSearch($workOrderNo);
	//_click(_link($workOrderNo));
	
	
	_selectDomain($g_domain);
	_wait(15000,_isVisible(_cell($wizardIDName)));
	
	
	//SFM - Create Quote from Work Order 
	 _click(_button("/Create_Quote_from_Work/", _in(_cell($wizardIDName))));
	 _selectDomain();
	 _wait(20000,_isVisible(_label("Status:")));
	 _setValue(_textbox("Status:"), "Presented");
	 _click(_div("/sfm-button-/", _near(_label("Valid Until:"))));
	
	 // Add a Parts Line
	 _click(_span("/svmx-sfmd-add-line-icon/"));
	 _click(_image("/svmx-sfmd-edit-icon/"));
	 _wait(10000,_isVisible(_span("/svmx_lookup_icon/")));
	 _click(_span("/svmx_lookup_icon/", _near(_label("Product:"))));
	 $bo_act_common.searchfunction($productName);
	 _setValue(_textbox("Qty:"), "2");
	 _setValue(_textbox("svmx-form-field svmx-form-required-field svmx-form-text svmx-form-invalid-field"), "4000");
	 _click(_span("Update"));
	
	//Add a Labor Line
	_click(_span("Labor"));
	_setStrictVisibilityCheck(true);
	_click(_span("/svmx-sfmd-add-line-icon/"));
	_click(_image("/svmx-sfmd-edit-icon/"));
	_setStrictVisibilityCheck(false);
	_setValue(_textbox("Qty:"), "3");
	_setValue(_textbox("/svmx-form-required-field/", _rightOf(_label("Unit Price:"))),"6000");
	_click(_span("Update"));
	
	//Add a Expense Line
	_click(_span("Expense"));
	_setStrictVisibilityCheck(true);
	_click(_span("/svmx-sfmd-add-line-icon/"));
	_click(_image("/svmx-sfmd-edit-icon/"));
	_setStrictVisibilityCheck(false);
	_setValue(_textbox("Qty:"), "4");
	_setValue(_textbox("/svmx-form-required-field/", _near(_label("Unit Price:"))),"8500");
	_click(_span("Update"));
	_wait(5000);
	_click(_span("svmx-btn-icon svmx-sfmd-save-icon"));
	_wait(15000);
	
	
	//Create usage lines from estimate & Get Price Calculation for Part and Labor
	
	var $lineQty=10;
	var $searchValue=$productName;
	
	// Add a Parts Line
	$bo_act_getPrice.addPartsLineToSFMDelivery($searchValue, $lineQty);
	_wait(15000);
	
	//isBillable check box selection validation. 
	_setStrictVisibilityCheck(true);
	var $isBillableCheckBoxStatus = _isVisible(_div("/svmx-grid-checkheader-unchecked/",_under(_span("Is Billable"))));
		if ($isBillableCheckBoxStatus==true) {
			_log("inside If isBillableCheckBoxStatus loop");
			_check(_div("/svmx-grid-checkheader-unchecked/",_under(_span("Is Billable"))));
		}
	_setStrictVisibilityCheck(false);
	
	
	
	//Add a Labor Line
	$bo_act_getPrice.addLaborLineToSFMDelivery($searchValue, "service", "03", "05");
	_wait(15000);
	_setStrictVisibilityCheck(true);
	_click(_div("/svmx-grid-checkheader-checked/", _near(_span("/Use Price From Pricebook/"))));
	_click(_div("/svmx-grid-cell-inner/",_under(_div("/Line Price Per Unit/"))));
	_setValue(_textbox("/svmx-form-field svmx-form-text/",_under(_div("/Line Price Per Unit/"))),"1200");
	
	//isBillable check box selection validation. 
	var $isBillableCheckBoxStatus = _isVisible(_div("/svmx-grid-checkheader-unchecked/",_under(_span("Is Billable"))));
		if ($isBillableCheckBoxStatus==true) {
			_check(_div("/svmx-grid-checkheader-unchecked/",_under(_span("Is Billable"))));
		}
	_setStrictVisibilityCheck(false);
	
	
	
	//Add a Expense Line
	$bo_act_getPrice.addExpensesLineToSFMDelivery("Phone", "03", "3000");
	_wait(15000);
	
	
	
	//Add a Travel Line
	$bo_act_getPrice.addTravelLineToSFMDeliveryUsingStartEndDate("01", "03");
	_wait(15000);
	
	
	//assert on get Price Calculation 
	_click($bo_pg_getPrice.btn_getPrice);
	_wait(5000);
	_click($bo_pg_getPrice.btn_partsLine);
	_wait(15000);
	_setStrictVisibilityCheck(true);
	//var $actualPRice=_getCellText(_div("/svmx-grid-cell-inner/", _under(_div("gridcolumn-1071-titleEl"))));
	var $actualPartPrice=_getCellText(_div("/svmx-grid-cell-inner/",_under(_div("/svmx-column-header-inner/",_near(_div("Billable Line Price"))))));
	_assertEqual("1,500.000",$actualPartPrice,"Assertion Passl");
	_click($bo_pg_getPrice.btn_laborLine);
	//var $actualPRice=_getCellText(_div("/svmx-grid-cell-inner/", _under(_div("gridcolumn-1135-titleEl"))));
	var $actualLaborPrice=_getCellText(_div("/svmx-grid-cell-inner/",_under(_div("/svmx-column-header-inner/",_near(_div("Billable Line Price"))))));
	_assertEqual("2,400.000",$actualLaborPrice,"Assertion Pass");
	_click($bo_pg_getPrice.btn_save);
	
	
	//SFM - Create Usage from Estimate 
	
	// Add a Parts Line
	$bo_act_getPrice.addPartsLineToSFMDelivery($searchValue,$lineQty);
	
	//Add a Labor Line
	$bo_act_getPrice.addLaborLineToSFMDelivery($searchValue, "service", "03", "05");
	
	//Add a Expense Line
	$bo_act_getPrice.addExpensesLineToSFMDelivery("Phone", "03", "3000");
	_wait(15000);
	
	
	
	//Add a Travel Line
	$bo_act_getPrice.addTravelLineToSFMDeliveryUsingStartEndDate("01", "03");
	
	_wait(15000, _isVisible(_span("svmx-btn-icon svmx-sfmd-save-icon")));
	_click($bo_pg_getPrice.btn_save);
	
	/*
	// SFM - Output Document creation
	_wait(30000, _isVisible(_button("Finalize")));
	_click(_button("Finalize"));
	_wait(30000, _isVisible(_link(0)));
	_click(_link(0));
	
	*/
	_wait(15000,_isVisible($bo_pg_workOrders.txt_workOrderDetails));
	//_assertVisible(_cell("Edit | View | Del", _near(_heading3("Notes & Attachments"))),"Service Report is attached to Work Order: ");
	
			//delete test data
	/*
			$bo_act_accounts.deleteAccount($accountName);
			$bo_act_installedProduct.deleteInstalledProduct($IBName);
			
			$bo_act_SFW.deleteSFMWizard($objName, $wizardIDName);
			$bo_act_navigation.navigateToSfmTransactionDesigner();
			$bo_act_SFM.deleteSFM($sfmName1);
			$bo_act_SFM.deleteSFM($sfmName2);
			$bo_act_SFM.deleteSFM($sfmName3);
			$bo_act_SFM.deleteSFM($sfmName4);
	*/

$BVT_TC_003_SFW_with_cloned_Wiz_steps.end();
