
 /**
 * Author	: Pratima
 * Reviewer	: 
 * Pre-req	: Nothing
 *  * Automation list view page object repository

*/




var $sfa_pg_SFAListView=new function sfa_pg_SFAListView(){

	// Automation table column items

	this.btn_heading_autName=_div("Automation Name");
	this.btn_heading_EventService=_div("Event Service");
	this.btn_heading_ActionService=_div("Action Service");
	this.btn_heading_enabled=_div("Enabled");
	this.btn_heading_groupProfile=_div("Group Profile");
	this.btn_heading_lastEditedCol=_div("Last Edited");		
	this.btn_NewTrn=_button("New Automation");
	this.btn_processNav=_list("Path__nav slds-tabs--path__nav");
	this.textbox_GroupProfile_Dropdown = _textbox("strSVMXGroupProfileId");
	this.textbox_EventTriggerField_Dropdown=_textbox("objSFDCEventJson__SFDC_Data_Event_Type");
	this.textbox_EventTypeTriggerField_Dropdown=_textbox("objSFDCEventJson__Event_Trigger_Fields")
	this.textbox_EventTriggerObject_Dropdown=_textbox("objSFDCEventJson__Object_API_Name");
	this.textbox_FilterExpression_Dropdown=_textbox("strExpressionId");
	this.titlenameAut = "Automation_";
	this.titleAuNAME=_textbox("strSFAProcessName");
	this.buttonNext=_button("Next");
	this.radio1=_span("slds-radio--faux")
	this.radio2=_span("slds-radio--faux[1]")
	this.radio3=_span("slds-radio--faux[2]")

	//this.textbox_Saleforce_Dropdown=_textbox("objSFDCEventJson__SFDC_Data_Event_Type");
	this.textbox_SalesforceRecipient_Dropdown=_textbox("objSFDCActionJson__Recipient_Field_API_Names");
	this.btn_radiusDropdown_Recipients=_textbox("Recipients");

	this.textbox_SalesforceProcessId_Dropdown=_textbox("strSFMProcessId");
	this.messageTitle=_textbox("objSFDCActionJson__Message_Title");
	this.textbox_Expression_Filter_Dropdown=_textbox("strExpressionId");
	this.textbox_UpdatestFiledName_Dropdown=_textbox("objSFDCEventJson__Event_Trigger_Fields");
	this.textbox_GeoEvent_Dropdown=_textbox("objGeofenceEventJson__Trigger_Type");
	this.textbox_GeoSortBy_Dropdown=_textbox("objGeofenceEventJson__Sort_Records_By");
	this.btn_actionMenu=_button("/slds-button Button--type-icon-border/");
	this.btn_radiusDropdown=_textbox("objGeofenceEventJson__Fence_Radius");
	this.textbox_ConfigButtons_Dropdown=_textbox("Input Picklist__input slds-input slds-combobox__input[3]");

	this.btn_autNameAscSort=_div("/sort-asc/");
	

	this.textbox_SFATitle = _textbox("strSFAProcessName");

/** Function to return Timestamp
	 * Function Name : timestamp
	 * Description : This function will return the current time stamp in below format
	 *     YYYYMMDDHHMMSS
	 * Ex; 20190227144201
	 * 
	 *	 
	 */

	this.randomNumber= function(){
		var $now = new Date();
		var $year = $now.getFullYear();
		var $month = $now.getMonth()+1;
		var $day = $now.getDate();
		var $hour = $now.getHours();
		var $min = $now.getMinutes();
		var $sec = $now.getSeconds();	
		//_log($Message);
		
	var $random = $year+($month<=9?'0'+$month:$month)+($day<=9?'0'+$day:$day)+($hour<=9?'0'+$hour:$hour)+($min<=9?'0'+$min:$min)+($sec<=9?'0'+$sec:$sec);
	return $random;
	};

	
	
		
		 this.editorNumberofRows = function(){
	   	var $menuTexts = _collectAttributes("_div", "Grid__item SequenceNumberColumn slds-col slds-no-flex", "sahiText");
		$EditorRows = $menuTexts.length;		
		return $EditorRows;
	};
	/**
	 * Function to select the RANDOM pick list item based on index passed
	 * Author - Ajay Kumar 11-Mar-2019
	 * $DOMObject - Logical Name of the xpath for drop down list.
	 * Ex: Drop down DOM
	 * $ObjectNamePicklist,$FieldNamePicklist, $OperatorPicklist
	 * 
	 */
	this.selectRandomPicklistitem=function($DOMObject)
	  {
		var $links = null;$counter =null;
		
		// To capture random number of length 1 from 0-9
		var $stamp =$sfa_pg_SFAListView.randomNumber();
		var $counter = $stamp.slice(-1);		

		_log("RANDOM NUMBER IS"+$counter);		
		
		//To capture number of rows in the editor
		var $rowNo = $sfa_pg_SFAListView.editorNumberofRows();		
		$rowNo = $rowNo-1;
		var $operatorObj = _textbox("strSVMXGroupProfileId");

		
		// To capture elements from pick list based on DOM Object.
		if ($DOMObject == "strSVMXGroupProfileId")
			{		
			 _click(_textbox("strSVMXGroupProfileId"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
								_log($links[$counter]);

				_click($links[$counter]);
			}	
else if($DOMObject == "objSFDCEventJson__Event_Trigger_Fields")
			{		
			 _click(_textbox("objSFDCEventJson__Event_Trigger_Fields"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[2]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
								_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "strSFMProcessId")
			{		
			 _click(_textbox("strSFMProcessId"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[1]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "Input Picklist__input slds-input slds-combobox__input[2]")
			{		
			 _click(_textbox("Input Picklist__input slds-input slds-combobox__input[2]"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[2]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
		
	  
	  else if($DOMObject == "objSFDCEventJson__Object_API_Name")
			{		
			 _click(_textbox("objSFDCEventJson__Object_API_Name"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
		
		else if($DOMObject == "objSFDCActionJson__Recipient_Field_API_Names")
			{		
			 _click(_textbox("objSFDCActionJson__Recipient_Field_API_Names"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject=="Recipients")
			{		
			 _click(_textbox("Recipients"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			
			else if($DOMObject == "objSFDCEventJson__SFDC_Data_Event_Type")
			{		
			 _click(_textbox("objSFDCEventJson__SFDC_Data_Event_Type"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "strExpressionId")
			{		
			 _click(_textbox("strExpressionId"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[1]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "objSFDCEventJson__Event_Trigger_Fields")
			{		
			 _click(_textbox("objSFDCEventJson__Event_Trigger_Fields"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[2]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			
		
		else if($DOMObject == "strExpressionId")
			{		
			 _click(_textbox("strExpressionId"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[1]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "objGeofenceEventJson__Trigger_Type")
			{		
			 _click(_textbox("objGeofenceEventJson__Trigger_Type"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[1]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			
			
			else if($DOMObject == "objGeofenceEventJson__Sort_Records_By")
			{		
			 _click(_textbox("objGeofenceEventJson__Sort_Records_By"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[2]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			
		else if($DOMObject == "objGeofenceEventJson__Fence_Radius")
			{		
			 _click(_textbox("objGeofenceEventJson__Fence_Radius"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[4]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}
			else if($DOMObject == "Input Picklist__input slds-input slds-combobox__input[3]")
			{		
			 _click(_textbox("Input Picklist__input slds-input slds-combobox__input[3]"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[3]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "Input Picklist__input slds-input slds-combobox__input[4]")
			{		
			 _click(_textbox("Input Picklist__input slds-input slds-combobox__input[4]"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[4]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "Input Picklist__input slds-input slds-combobox__input[5]")
			{		
			 _click(_textbox("Input Picklist__input slds-input slds-combobox__input[5]"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list[5]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			else if($DOMObject == "Input Picklist__input slds-input slds-combobox__input[6]")
			{		
			 _click(_textbox("Input Picklist__input slds-input slds-combobox__input[6]"));
				 _wait(1000);
				 $links = _collect("_link","/.*/",_in(_list("Menu__list slds-dropdown__list6]")));
				 $linkslen=$links.length;
				 _log("TOTAL LINKS IN DROPDOWN ARE"+$linkslen);				 
				 
				 if($counter >= $linkslen)
				 {
					 $counter = $linkslen-1;
				  }
		
			 //To select pick list item based on the random index generated
				_log("Index is"+$counter);
				_log($links[$counter]);

				_click($links[$counter]);
			}	
			
	  };
	
		 /**
		 * Function to sort list view Items
		 * $colName - Column name to sort Ex:"Automation Name","Last Edited Date"
		 * $order - Order to sort Ex:ascending or descending.
		 **/
	 /* Sorting on Automation list View */
	  
	this.colSort=function($colName,$order){
		//Collection All element under mentioned column
		var $list=null;
		if ($colName=="Automation Name") {
				_log("Under if loop1: ");
				$list =_collect("_div","/DataGrid__cell/",_under(_parentNode(_div($colName),"DIV",1)));
				_log("No. of rows: "+$list.length);

				
			}
		
		//new array declaration
		var $listName=new Array($list.length);
		
		//fetching element text to array
		for (var $i = 0; $i < $list.length; $i++) {
			$listName[$i]=_getText($list[$i]);
			//_log("Link Names ="+$listName[$i]);
		}	
		
		// filtering array to remove space
		$listName=$listName.filter(Boolean);
		
		//Generating Original copy
		var $orgList=new Array($listName.length);
		for(var $i=0;$i<$listName.length;$i++){
			
			$orgList[$i]=$listName[$i];
		//	_log("Orginal Item ="+$orgList[$i]+ "Array Item=" +$listName[$i]);
		}
		
		//Sorting based on Ascending or descending
		var $linkListAscSorted=$listName.sort();
		var $linkListSorted=null;
		if($order=="ascending"){
			$linkListSorted=$linkListAscSorted;
		//	_log("Asc Sorted Links"+$linkListSorted);
		}else {
			$linkListSorted=$linkListAscSorted.reverse();
		//	_log("Dec Sorted Links"+$linkListSorted);
		}		
				
		var $retVal=false;
		for(var $i=0;$i<$linkListSorted.length;$i++){	
		//	_log("Sorted Links len"+$linkListSorted.length);
	
			if($orgList[$i]==$linkListSorted[$i]){;
				$retVal=true;
				_log("Status of list values"+$retVal);
			}else{
				
				$retVal=false;
				break;
			}	

		//_assertTrue($retVal, "Links on "+$colName+" column are not sorted in order");
		return $retVal;
		_log($retVal)
	};

	  };
};