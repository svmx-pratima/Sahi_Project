
/**
 * Functions to perform navigation actions
 */
var $bo_act_navigation = new function bo_act_navigation() {

    /**
     * Navigates to Home  page
     * @returns boolean
     */this.navigateToHome = function() {
    	 _selectWindow();
    	 _click($bo_pg_home.link_home);
    	 _wait(6000, _isVisible($bo_pg_home.link_servicemaxSetup));
	
    };

    /**
     * Navigates to Servicemax setup page
     * @returns boolean
     */this.navigateToSvmxSetup = function() {
	 this.navigateToHome();
	_click($bo_pg_home.link_servicemaxSetup );
	_wait(20000,_isVisible($bo_pg_servicemaxSetup.btn_serviceFlowManager));

    };

    /**
     * Navigates to Service Flow Manager
     */
    this.navigateToServiceFlowManager = function() {
	 this.navigateToSvmxSetup();
	_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
	 _wait(1000);	 
	_setSpeed(3000);
    };
    
    /**
     * Navigates to a SFm transaction designer
     * @returns boolean
     */this.navigateToSfmTransactionDesigner = function() {
	 this.navigateToSvmxSetup();
	_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
	_click($bo_pg_servicemaxSetup.btn_sfmTransactionAndDocsDesigner);
	_wait(8000);	 
	_wait(20000, _isVisible($bo_pg_sfmTransactionAndDesigner.btn_standardSfmTransaction));
	_setSpeed(3000);
	//return $callBack.returnResult(_exists($bo_pg_sfmTransactionAndDesigner.btn_standardSfmTransaction));
    };
    
    
    /**
     * NAvigate to SFM Maps
     */
    
    this.navigatetoSFMMaps = function(){
    	
    	 this.navigateToSvmxSetup();
    	 _click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
    		_click($bo_pg_sfmMappings.btn_sfmmappings);
   		 _wait(10000);	 
   		_setSpeed(3000);
    };
    /**
     * Navigates to a SFm Search designer
     * @returns boolean
     */this.navigateToSfmSearchDesigner = function() {
//    	 $bo_act_navigation.navigateToSfmTransactionDesigner();
    	 this.navigateToSvmxSetup();
 			_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
    	 _click($bo_pg_servicemaxSetup.btn_sfmSearch);
     };
    
//Added By BAC Team
    this.navigateToProductsPage = function(){
    	_click($bo_pg_home.btn_allTabs);
    	_click($bo_pg_home.link_products);
    };
    
    this.navigateToAccountsPage = function(){
    	 _click($bo_pg_home.btn_allTabs);
    	 _click($bo_pg_home.link_accounts);
    };
    this.navigateToCasesPage = function(){
   	 _click($bo_pg_home.btn_allTabs);
   	 _click($bo_pg_home.link_cases);
   };
    	
     this.navigateToContactsPage = function(){
    	 _click($bo_pg_home.btn_allTabs);
    	 _click($bo_pg_home.link_contacts);
    };
    
    this.navigateToInstalledProductPage = function(){
    	_click($bo_pg_home.btn_allTabs);
    	if(!_condition(_isVisible($bo_pg_home.link_installedProducts)))
    		{
    		$bo_act_navigation.navigateToSetUpAndSearchfromUserNavlabel("Tabs");
    		$bo_act_salesforcePageSetUp.createTabs("Installed Product",5);
    		}
   	    _click($bo_pg_home.link_installedProducts);
    };

    this.navigateToServiceMaintenanceContractPage = function(){
    	_click($bo_pg_home.btn_allTabs);
    	if(_condition($bo_pg_home.link_serviceMaintenanceContracts == null))
		{
		$bo_act_navigation.navigateToSetUpAndSearchfromUserNavlabel("Tabs");
		$bo_act_salesforcePageSetUp.createTabs("Service/Maintenance Contract",4);
		}
   	    _click($bo_pg_home.link_serviceMaintenanceContracts);
    };
    this.navigateToStockAdjustment = function(){
   	 _click($bo_pg_home.btn_allTabs);
   	    _click($bo_pg_home.link_stockAdjustment);
    };
    
    this.navigateToStandardPriceBook = function(){
      	 _click($bo_pg_home.btn_allTabs);
      	 _click($bo_pg_home.link_priceBooks);
      	 _click($bo_pg_home.btn_go);
      };

    this.navigateToSlaTerms = function(){
    	$bo_act_navigation.navigateToHome();
    	_click(_link("ServiceMax Setup"));
    	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
    	_click($bo_pg_servicemaxSetup.btn_slaTerms);
    	_wait(1000);
    	_call(top.location.reload());
    };

    this.navigateToPMPlanTemplatePage = function(){
    	$bo_act_navigation.navigateToHome();
    	_click(_link("ServiceMax Setup"));
    	_click($bo_pg_servicemaxSetup.btn_installedBaseAndPM );
    	_click($bo_pg_servicemaxSetup.btn_PMPlanTemplate);
    	_wait(1000);
     	for (var $i = 0; $i < 25; $i++) {
    		if (_isVisible($bo_pg_PMPlanTemplate.btn_newPMPlanTemplate)) {
    			break;
    		}
    		else {
    			_call(top.location.reload());
    			_wait(10000, _isVisible($bo_pg_PMPlanTemplate.btn_newPMPlanTemplate));
    			}
     		}
    };

    this.navigateToPMProcess = function(){
    	$bo_act_navigation.navigateToHome();
    	_click(_link("ServiceMax Setup"));
    	_click($bo_pg_servicemaxSetup.btn_installedBaseAndPM );
    	_click($bo_pg_servicemaxSetup.btn_PMProcess);
    	_wait(1000);
    	_call(top.location.reload());
    };

    this.navigateToLocations = function(){
    	_click($bo_pg_home.btn_allTabs);
   	    _click($bo_pg_home.link_locations);
   	 _setSelected(_select("hotlist_mode"),"Recently Created");
    };
    
    this.navigateToDevConsole = function(){
    	$bo_act_navigation.navigateToHome();
    	_set($url, window.location.href);
    	$url= $url.replace("home/home.jsp","_ui/common/apex/debug/ApexCSIPage");
    	_navigateTo($url);
    };
    
    this.navigateToWarrantyTermsPage = function(){
    	_click($bo_pg_home.btn_allTabs);
    	_setStrictVisibilityCheck(true);
   	    _click($bo_pg_home.link_warrantyTerms);
   	    _setStrictVisibilityCheck();
    };
    
    this.navigateToCreatedRecordUsingCreateNewView = function($viewName, $fieldName, $operator, $recordToBeSearch){
    	_click(_link("Create New View"));
    	_setValue(_textbox("/View Name:/"),$viewName);
    	_setValue(_textbox("/View Unique Name:/"),$viewName);
    	_setSelected(_select("column"), $fieldName);
    	_setSelected(_select("operator"), $operator);
    	_setValue(_textbox("fval1"),$recordToBeSearch);
    	_click(_submit(" Save ")); 
    	_click(_span($recordToBeSearch)); 
    	_wait(30000, _isVisible($recordToBeSearch));
    	};
    	
    this.navigateToCreatedRecordUsingGlobalSearch = function($recordToBeSearch){
    	_click($bo_pg_home.link_home);
    	_setValue(_textbox("phSearchInput"),$recordToBeSearch);
    	_click($sfm_pg_commonSfdc.btn_globalSearch);
  	    _wait(5000);
    	_wait(3000, _isVisible($recordToBeSearch));
    //	_click(_link("Search All"));
    //	_wait(3000, _isVisible($recordToBeSearch));
    	_wait(3000);
    	_click(_link($recordToBeSearch));
    	_wait(6000);
        };
        
     this.navigateToConfigurationProfilesPage = function(){
        	$bo_act_navigation.navigateToHome();
        	_click(_link("ServiceMax Setup"));
        	_click($bo_pg_servicemaxSetup.btn_appAdministration);
        	_click($bo_pg_servicemaxSetup.btn_configurationProfiles);
        };
        
     this.navigateToActiveOrgWideConfigProfilePage = function($selectModule, $selectSubModule){
    	 _click(_checkbox(0,_leftOf(_span("Active",_near(_heading2("Org-wide Configuration Settings"))))));
    	 _click(_submit("Edit",_near(_heading2("Org-wide Configuration Settings"))));
    	 _wait(3000,_isVisible(_heading2("Edit Configuration Profile")));
    	 _setSelected(_select(0,_rightOf(_label("Select Module"))),$selectModule);
    	 _setSelected(_select(0,_rightOf(_label("Select Submodule"))),$selectSubModule);
     };

     this.navigateToPreventiveMaintenancePlans = function(){
     	_click($bo_pg_home.btn_allTabs);
    	    _click($bo_pg_home.link_preventiveMaintenancePlans);
     };

     /**
      * Navigates to a SFM Wizards
      * @returns boolean
      */
 	this.navigateToSfmWizard = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
 	_click($bo_pg_servicemaxSetup.btn_sfmWizard);
    };

 	  /**
      * Navigates to a SFM App Permission
      * @returns boolean
      */
	this.navigateToSfmAppPermission = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
 	_click($bo_pg_servicemaxSetup.btn_sfmAppPermission);
	_wait(3000);
		while(_isVisible(_label("Select Process Type"))==false){
			 _navigateTo(document.location.href, true);
		}
		
 	
    };
	this.navigateToScheduledSFM=function(){
		this.navigateToSvmxSetup();
		_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
		_click($bo_pg_servicemaxSetup.btn_scheduledSFM);
		_wait(3000);
	};
    
	this.navigateToSfmCustomAction = function() {
		 this.navigateToSvmxSetup();
		_click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
		_click($bo_pg_servicemaxSetup.btn_sfmCustomAction);
		_wait(3000);
    };
     
     /**
      * Navigates to service Flow Automation
      */
     this.navigateToServiceFlowAutomation = function() {
 	 this.navigateToHome();
 	_click($bo_pg_home.link_servicemaxSetup );
 	_click($bo_pg_servicemaxSetup.btn_mobile);
 	_click($bo_pg_servicemaxSetup.btn_serviceFlowAutomation);
     };
     /**
      * Navigates to Auto Entitlement Rules - Work Order
      */
     this.navigateToAutoEntitlementRulesForWO = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
 	_click($bo_pg_servicemaxSetup.btn_autoEntitlementRulesWO);
     };
     
     /**
      * Navigates to Auto Entitlement Rules - Case
      */
     this.navigateToAutoEntitlementRulesForCase = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
 	_click($bo_pg_servicemaxSetup.btn_autoEntitlementRulesCase);
     };
     
     /**
      * Navigates to Activity Master
      */
     this.navigateToActivityMaster = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
 	_click($bo_pg_servicemaxSetup.btn_activityMaster);
 	_wait(1000);
 	for (var $i = 0; $i < 25; $i++) {
		if (_isVisible($bo_pg_activityMaster.btn_newActivityMaster)) {
			break;
		}
		else {
			_call(top.location.reload());
			_wait(10000, _isVisible($bo_pg_activityMaster.btn_newActivityMaster));
			}
 		}
     };
     
     /**
      * Navigates to Service Pricebooks
      */
     this.navigateToServicePricebooks = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
 	_click($bo_pg_servicemaxSetup.btn_servicePricebooks);
 	_wait(1000);
	for (var $i = 0; $i < 25; $i++) {
		if (_isVisible($bo_pg_servicePricebooks.btn_addNewServicePricebook)) {
			break;
		}
		else {
			_call(top.location.reload());
			_wait(10000, _isVisible($bo_pg_servicePricebooks.btn_addNewServicePricebook));
			}
 		}
     }; 
     
     /**
      * Navigates to Service Option
      */
     this.navigateToServiceType = function() {
 	 this.navigateToSvmxSetup();
 	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
 	_click($bo_pg_servicemaxSetup.btn_services);
 	_wait(1000);
 	for (var $i = 0; $i < 25; $i++) {
		if (_isVisible($bo_pg_servicesTypes.btn_newAvailableService)) {
			break;
		}
		else {
			_call(top.location.reload());
			_wait(10000, _isVisible($bo_pg_servicesTypes.btn_newAvailableService));
			}
 		}
     };
     
     this.navigateToWorkOrdersTab = function(){
    	 _click($bo_pg_home.btn_allTabs);
    	 _setStrictVisibilityCheck(true);
    		_click($bo_pg_home.link_customWorkOrders);
    		_setStrictVisibilityCheck(false);
     };

     this.navigateToStockTransfers = function(){
    	 _click($bo_pg_home.btn_allTabs);
    	    _click($bo_pg_home.link_stockTransfer);
     };
     
     this.navigateToSetUpAndSearch = function($searchValue){
    	 _click(_link("Setup"));
    	 _wait(50000,_isVisible(_textbox("setupSearch")));
    	 _setValue(_textbox("setupSearch"),$searchValue);
    	 _click(_link($searchValue)); 
     };
     this.navigateToSetUpAndSearchfromUserNavlabel = function($searchValue){
     _click(_span("userNavLabel"));
     _click(_link("Setup"));
     _wait(50000,_isVisible(_textbox("setupSearch")));
	 _setValue(_textbox("setupSearch"),$searchValue);
	 _click(_link($searchValue)); 
     };
 
	this.navigateToCounterRule=function(){
			this.navigateToSvmxSetup();
		_click($bo_pg_servicemaxSetup.btn_instalBaseAndPM);
		_click($bo_pg_servicemaxSetup.btn_counterRule);		
	};

	this.navigateToservicePlans = function(){
    	$bo_act_navigation.navigateToHome();
    	_click(_link("ServiceMax Setup"));
    	_click($bo_pg_servicemaxSetup.btn_warrantiesAndServiceContracts);
    	_click($bo_pg_servicemaxSetup.btn_servicePlans);
    	_wait(1000);
     	for (var $i = 0; $i < 25; $i++) {
    		if (_isVisible(_button("New Service Plan"))) {
    			break;
    		}
    		else {
    			_call(top.location.reload());
    			_wait(10000, _isVisible(_button("New Service Plan")));
    			}
     		}
    };
	
	//Navigate to SFM Search Configuration Screen
    this.navigateToSfmSearchInDesigner = function() {
   	 this.navigateToSvmxSetup();
   	 _click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
   	 _click($bo_pg_servicemaxSetup.btn_sfmSearch);	   	 
    };
    
    this.navigateToTaskTemplatePage = function(){
//    	$bo_act_navigation.navigateToHome();
    	this.navigateToSvmxSetup();
    	_click($bo_pg_servicemaxSetup.btn_installedBaseAndPM );
    	_click($bo_pg_servicemaxSetup.btn_TaskTemplate);
    	_wait(1000);
    	for (var $i = 0; $i < 25; $i++) {
    		if (_isVisible(_button("New Task Template"))) {
    			break;
    		}
    		else {
    			_call(top.location.reload());
    			_wait(10000, _isVisible(_button("New Task Template")));
    			}
     		}
    };
    this.navigateTodepotAndStockingLocations = function() {
    	 this.navigateToSvmxSetup();
    	_click($bo_pg_servicemaxSetup.btn_reverseLogistics);
    	_click($bo_pg_servicemaxSetup.btn_depotAndStockingLocations);
       };
       
       //Navigate to Mobile and offline module
    this.navigateMobileAndOffline = function($Profilename){
       	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
       	_click($bo_pg_servicemaxSetup.btn_mobileconfiguration);
       	_setSelected($bo_pg_servicemaxSetup.listselectprofile,$Profilename);	  
       };
       
   this.navigateToInventoryProcesses = function(){
	   _click($bo_pg_home.link_servicemaxSetup); 
	   _click($bo_pg_servicemaxSetup.btn_serviceFlowManager);
	   _click(_div("Inventory Processes"));
   };
   
   this.navigateToInstalledBaseApp = function(){
	   _click($bo_pg_home.link_servicemaxSetup); 
	   _click(_div("Connected Field Service"));
	   _click(_div("Installed Base App Setup"));
   };

   this.navigateToFeaturePermissionPage = function(){
   	$bo_act_navigation.navigateToHome();
   	_click(_link("ServiceMax Setup"));
   	_click($bo_pg_servicemaxSetup.btn_appAdministration);
   	_click($bo_pg_servicemaxSetup.btn_FeaturePermission);
   	_wait(10000);
   };
   
   this.navigateTofeatureAdministrationPage = function() {
		 this.navigateToHome();
		_click($bo_pg_home.link_featureAdministration );
		_wait(5000,_isVisible($bo_pg_servicemaxSetup.btn_checklistManager));
	
	    };
	    
	    this.navigateToChecklistDesigner = function() {
	   	this.navigateTofeatureAdministrationPage();
		_click($bo_pg_servicemaxSetup.btn_checklistManager);
	  	_click($bo_pg_servicemaxSetup.btn_checklistDesigner);
		 _wait(10000);	 
	   	_setSpeed(3000);
	   	//return $callBack.returnResult(_exists($bo_pg_sfmTransactionAndDesigner.btn_standardSfmTransaction));
	       };

	       this.navigateToTimesheetPage = function() {
	  		 this.navigateToHome();
	  		_click(_link("ServiceMax Setup"));
	  		_click($bo_pg_servicemaxSetup.btn_serviceOrganization);
	  		_click($bo_pg_servicemaxSetup.btn_timesheet);
	  		_wait(5000,_isVisible(_span("Timesheet")));
	  	
	  	    };
// Owner : Narendra Babu
	       
	       
	           //Navigate to Mobile and offline module
	       this.navigateMobileAndOffline = function($Profilename){
	          //Navigate to Mobile and offline DC Tab 
	       this.navigateMobileAndOffline = function($Profilename, $tabname, $objectname0,$objectname1,$objectname2,$objectname3,$objectname4){
	          	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	          	_click($bo_pg_servicemaxSetup.btn_mobileconfiguration);
	          	_setSelected($bo_pg_servicemaxSetup.listselectprofile,$Profilename);
	          	_wait(20000);
	          	_click($bo_pg_servicemaxSetup.btn_downloadcriteria_checkbox1);
	          	_click($bo_pg_servicemaxSetup.btn_downloadcriteria_edit);
	          	_click(_cell($tabname));
	          	// Adding objects to the TAb
	          	
	          	_setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname0);
	          	_click($bo_pg_servicemaxSetup.btn_AddObjectDC);
	          	_wait(1000);
	          	_setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname1);
	          	_click($bo_pg_servicemaxSetup.btn_AddObjectDC);
	          	_wait(1000);
	          	_setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname2);
	          	_click($bo_pg_servicemaxSetup.btn_AddObjectDC);
	          	_wait(1000);
	          	_setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname3);
	          	_click($bo_pg_servicemaxSetup.btn_AddObjectDC);
	          	_wait(1000);
	          _setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname4);
	          
	          	
	         	    
	         	  
	         	
	          	// Adding the "Downloaded Criteria and Ownership Type"
	       	_setSelected(_select(0,$bo_pg_servicemaxSetup.list_downloadcriteria), "SVMXSTD: Open Work Orders");
	       	_setSelected(_select(0,$bo_pg_servicemaxSetup.list_OwnershipType), "All Records");
	          	_wait(1000);
	          	_click($bo_pg_servicemaxSetup.btn_SavebuttonDcObject);
	          // Verifying the assert Check
	          	_assertEqual(true, _isVisible(_div("Success:Mobile Configuration saved successfully for the selected profile")));
	              
	          
	          	
	          	
	          };
	          
	         
	          
	          this.navigateSynchronizationSettings = function($Profilename, $tabname1, $tabname2, $tabname3,$objectname0){
	       	   this.navigateToSvmxSetup();
	       	   _setStrictVisibilityCheck(true);

	       	   		_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	       	       	_click($bo_pg_servicemaxSetup.btn_mobileconfiguration);
	       	       	_setSelected($bo_pg_servicemaxSetup.listselectprofile,$Profilename);
	       	       	_wait(20000);
	       	       	_click($bo_pg_servicemaxSetup.btn_downloadcriteria_checkbox1);
	       	       	_click($bo_pg_servicemaxSetup.btn_downloadcriteria_edit);
	       	         _wait(20000);
	       	       	_click(_cell($tabname1));
	       	       	_click(_cell($tabname2));
	       	       	_click(_cell($tabname3));
	       	       	_setSelected(_select(0,$bo_pg_servicemaxSetup.objectselection),$objectname0);
	       	       
	       	       	_setSelected(_select(0,$bo_pg_servicemaxSetup.list_advanceddownloadcriteria), "SVMXC File name Is Not Null");
	       	    	_setSelected(_select(0,$bo_pg_servicemaxSetup.list_OwnershipType), "All Records");
	       	       	_wait(1000);
	       	       	_click($bo_pg_servicemaxSetup.btn_SavebuttonDcObject);
	       	   
	       	          _setStrictVisibilityCheck(false);

	          
	          };
	   };
	          
	          
	        this.delete_navigateMobileAndOffline = function ($tabname){
	       	 _click(_checkbox(0,$bo_pg_servicemaxSetup.btn_downloadcriteriadelete_checkbox));
	       	 _click(_checkbox(1,_under(_div("Select[1]"))));
	       	 _click(_checkbox(2,_under(_div("Select[1]"))));
	       	 _click(_checkbox(3,_under(_div("Select[1]"))));
	       	 _click(_checkbox(4,_under(_div("Select[1]"))));
	       	 
	        };
	        
	          
	       // Owner Narendra - DONOT CHANGE
	        
	        
	        this.navigate_to_servicemaxSetup_buttons = function (){
	        	this.navigateToSvmxSetup();
	        	// Click on App Administrations
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_modules));
	        	
	        	// Click on Modules
	        	_click($bo_pg_servicemaxSetup.btn_modules);
	        	_assertEqual(true, _isVisible(_heading2("Standard Modules")));
	        	
	        	this.navigateToSvmxSetup();
	        	// Click on App Administrations
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_submodules));
	        	
	        	// Click on Sub Modules
	        	_click($bo_pg_servicemaxSetup.btn_submodules);
	        	_assertEqual(true, _isVisible(_heading2("Manage Submodules")));
	        	
	        	//Click Settings
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Settings));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Settings);
	        	_assertEqual(true, _isVisible(_heading2("Manage Settings")));
	        	
	        	//Click TriggerControl
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_TriggerControl));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_TriggerControl);
	        	_assertEqual(true, _isVisible(_span("Trigger Setting")));
	        	
	        	//Click DisplayTags
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_DisplayTags));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_DisplayTags);
	        	_assertEqual(true, _isVisible(_heading2("Manage Display Tags")));
	        	
	        	//Click ConfiguartionProfiles
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_ConfigurationProfiles));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_ConfigurationProfiles);
	        	_assertEqual(true, _isVisible(_heading2("Org-wide Configuration Settings")));
	        	
	        	
	        	//Click Translations
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_app_administration);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Translations));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Translations);
	        	_assertEqual(true, _isVisible(_heading2("Manage Translations")));
	        	
	        	this.navigateToSvmxSetup();

               //Click ServiceOrganization
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Service_Organization);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Territories));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Territories);
	        	_assertEqual(true, _isVisible(_heading1("Territory Management Console")));
	        	
	        	//Click ServiceOrg
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Service_Organization);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_ServiceOrg));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_ServiceOrg);
	        	_assertEqual(true, _isVisible(_heading1("Team Technician Management Console")));
	        	
	        	//Click ServiceOrg
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Service_Organization);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Skills));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Skills);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Skill")));
	        	
	        	//Click OvernightPolicySetup
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Service_Organization);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_OvernightPolicySetup));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_OvernightPolicySetup);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Overnight Stay Policy")));
	        	
	        	this.navigateToSvmxSetup();
	        	
	        	//Click Installed_Base_PM 
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_PM);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Counter_Rule));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Counter_Rule);
	        	_assertEqual(true, _isVisible(_button("New Rule")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_PM);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Task_Template));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Task_Template);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Task Template")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_PM);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_PM_Plan_Templatese));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_PM_Plan_Templatese);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New PM Plan Template")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_PM);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_PM_Process));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_PM_Process);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_heading2("Standard Preventive Maintenance Processes")));
	        	
	        	
	        	
	        	this.navigateToSvmxSetup();
	        	
	        	//Click Offline_Profile 
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Offline_Profile));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Offline_Profile);
	        	_assertEqual(true, _isVisible(_heading2("Offline Profiles")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_SFM_Mobile_Permissions));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_SFM_Mobile_Permissions);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_label("Select Profile:")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_iPad_Settings));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_iPad_Settings);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_heading2("Service Report")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_mobileAndOffline);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Notifications));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Notifications);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_submit("New")));
	        	
	        	//Warranties_Service_Contracts
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Warranties_Service_Contracts);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_SLA_terms));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_SLA_terms);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New SLA Terms")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Warranties_Service_Contracts);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Auto_Entitlement_Rules_Work_Order));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Auto_Entitlement_Rules_Work_Order);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_submit("New Rule")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Warranties_Service_Contracts);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Activity_Master));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Activity_Master);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Activity Master")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Warranties_Service_Contracts);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Service_Plans));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Service_Plans);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Service Plan")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Warranties_Service_Contracts);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Warranty_Terms));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Warranty_Terms);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_button("New Warranty Terms")));
	        	
	        	//Connected Field Service
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Connected_Field_Service);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_Installed_Base_App_Setup));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_App_Setup);
	        	_call(top.location.reload());
	        	_Wait(20000);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_span("Select a profile:")));
	        	
	        	this.navigateToSvmxSetup();
	        	_click($bo_pg_servicemaxSetup.btn_Installed_Base_App_Setup);
	        	_assertEqual(true, _isVisible($bo_pg_servicemaxSetup.btn_IoT_Setup));
	        	
	        	_click($bo_pg_servicemaxSetup.btn_IoT_Setup);
	        	_call(top.location.reload());
	        	_Wait(20000);
	        	_call(top.location.reload());
	        	_assertEqual(true, _isVisible(_span("IoT Setup")));
	        	
	        	
	        };
	        
	        this.navigateToTechnicianEquipmentPage = function(){
	        	_click($bo_pg_home.btn_allTabs);
	       	    _click($bo_pg_home.link_technicianEquipment);
	
	       };
	       
	     //Function to design screen for header
	       this.designHeaderScreen = function($pg_layout_name,$fields_array){
	    	   var $i = 0;
	    	   for($i=0;$i<$fields_array.length;$i++){
	    		   _click(_f("main").fieldrenderer("[object Object]"));
	    			//_setValue(_f("main").s_textinput("Quick Find"), $fields_array[$i]);
	    		   _setValue($bo_pg_sfmTransactionAndDesigner.txt_quickFindField, $fields_array[$i]);
	    			_doubleClick(_f("main").s_label($fields_array[$i]));
	    	   }
	    			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAs, $pg_layout_name);
	    			_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
	    			_assertExists($bo_pg_sfmTransactionAndDesigner.page_saved);
	    	   
	    	   };
	    //Function to edit child screen page layout.
	    	   this.designChildScreen = function($pg_layout_name,$fields_array,$containers_array){
	        	   var $i = 0;
	        	   _wait(5000);
	        	   for($i=0;$i<$fields_array.length;$i++){
	        		 if(_isVisible(_f("main").s_hscrollbar("horizontalScrollBar").near(_f("main").s_richtext($containers_array[$i])))){
	        			   _setValue(_f("main").s_hscrollbar("horizontalScrollBar").near(_f("main").s_richtext($containers_array[$i])),"00");
	        		   }
	        		   	if($fields_array[$i] == "Account"){
	        		   		    _click(_f("main").s_datagroup("dataGroup").near(_f("main").s_richtext($containers_array[$i])));
	        		   			_setValue(_f("main").s_textinput("Quick Find"), $fields_array[$i]);
	        		   			_doubleClick($bo_pg_sfmTransactionAndDesigner.label_account);
	        		   	}
	        		   	
	        		   	else {
	        		   		_click(_f("main").s_datagroup("dataGroup").near(_f("main").s_richtext($containers_array[$i])));
	        				_setValue(_f("main").s_textinput("Quick Find"), $fields_array[$i]);
	        				if(_isVisible(_f("main").s_label($fields_array[$i]))){
	        				_doubleClick(_f("main").s_label($fields_array[$i]));
	        				}
	        				else {
	        					  _click(_f("main").s_datagroup("dataGroup").near(_f("main").s_richtext($containers_array[$i])));
	        					}
	        		   	}
	        		  
	        	   }
	        			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAs, $pg_layout_name);
	        			_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
	        			_assertExists($bo_pg_sfmTransactionAndDesigner.page_saved);
	        	 };
	    //Function to edit existing screen designer.
	    	   this.editHeaderScreen = function($fields_array,$containerName){
	        	   var $i = 0;
	        	   for($i=0;$i<$fields_array.length;$i++){
	        		   _click(_f("main").fieldrenderer("[object Object]").near(_f("main").formitemlabel($containerName)));
	        			_setValue(_f("main").s_textinput("Quick Find"), $fields_array[$i]);
	        			_doubleClick(_f("main").s_label($fields_array[$i]));
	        	   }
	        			_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
	        			_assertExists($bo_pg_sfmTransactionAndDesigner.page_saved);
	        	   
	        	   };
	       this.getCurrentTimeStamp = function(){
	        	//This function returns the current date and time in the form - DD-MM-YYYY_HR_MIN_SEC
	             var stamp = new Date();
	             var timeStamp = stamp.getDate() + "_" + (stamp.getMonth()+1) + "_" + stamp.getFullYear() + "_" + stamp.getHours() + "_" + stamp.getMinutes() + "_" + stamp.getSeconds();
	        	 return timeStamp;

	        		  };

	        this.navigateServicemaxSetUpInLightening=function(){
	        	$sfm_pg_wo.openAppLauncher();
	        	_click($bo_pg_home.link_aapLauncher);
	        	_wait(1000);
	        	_setValue($bo_pg_home.txtbox_findAnApp,"servicemax SetUp");
	        	//if(_containsText($bo_pg_home.link_servicemaxSetUpHome), "Servicemax SetUp Home"){
	        		if(_isVisible($bo_pg_home.link_servicemaxSetUpHome)){
	        		_click($bo_pg_home.link_servicemaxSetUpHome); 
	        		}else if(_isVisible($bo_pg_home.link_servicemaxSetUpHome1)){
	            		_click($bo_pg_home.link_servicemaxSetUpHome1);             	
	        	}else if(_isVisible($bo_pg_home.link_servicemaxSetUp1)){
	        		_click($bo_pg_home.link_servicemaxSetUp1)       		
	        }
	        };	

	        this.addSfmDesignerPermissionToUser = function($userName,$groupProfile){
	        //This function adds the SFM Designer launching permission to the given user in the given group profile.
	        	_click(_listItem($groupProfile));
	        	_setValue($bo_pg_servicemaxSetup.txt_featurePermissionSearch,$userName);
	        	_click($bo_pg_servicemaxSetup.btn_featurePermissionUserSearch);
	        	//Click the SFM designer checkbox. Only one search result is expected as the username is unique.
	        	if(!_exists(_div("/svmx-grid-checkheader-checked/",_under(_div($designerType))))){
	        		_click(_div("/svmx-grid-checkheader/",_under(_div($designerType))));
	        	}
	        	
	        	_wait(3000);
	        	_click($bo_pg_servicemaxSetup.btn_saveFeaturePermissionPage);
	        	_setStrictVisibilityCheck(true);
	        	_assertVisible($bo_pg_servicemaxSetup.msg_FeaturePermission);
	        	_click($bo_pg_servicemaxSetup.btn_okAfterFeaturePermissionSave);
	        	_setStrictVisibilityCheck(false);    	
	        	
	        	
	        };
	        this.deleteFeaturePermissionToUser = function($userName,$groupProfile,$designerType){
	            //This function removes the specified feature permission to the given user in the given group profile.
	            //If the feature permission is already not present, then the function skips doing that.
	            //Note: $designerType should either be "SFM Designer" or "Checklist Designer" (Case sensitive)
	            	 _click($bo_pg_servicemaxSetup.btn_dropDownForGrpProfile);
	            	_click(_listItem($groupProfile));
	            	_setValue($bo_pg_servicemaxSetup.txt_featurePermissionSearch,$userName);
	            	_click($bo_pg_servicemaxSetup.btn_featurePermissionUserSearch);
	            	//Click the SFM designer checkbox. Only one search result is expected as the username is unique.
	            	if(_exists(_div("/svmx-grid-checkheader-checked/",_under(_div($designerType))))){
	            		_click(_div("/svmx-grid-checkheader-checked/",_under(_div($designerType))));
	            	}
	            	
	            	_wait(3000);
	            	_click($bo_pg_servicemaxSetup.btn_saveFeaturePermissionPage);
	            	_setStrictVisibilityCheck(true);
	            	_assertVisible($bo_pg_servicemaxSetup.msg_FeaturePermission);
	            	_click($bo_pg_servicemaxSetup.btn_okAfterFeaturePermissionSave);
	            	_setStrictVisibilityCheck(false);    	
	                };
	        
	        
	          this.addFeaturePermissionToUser = function($userName,$groupProfile,$designerType){
	        //Author:Janaki
	        //This function adds the given feature permission to the given user in the given group profile.
	        //If the feature permission is already added, then the function skips doing that.
	        //Note: $designerType should either be "SFM Designer" or "Checklist Designer" (Case sensitive)
	        	 _click($bo_pg_servicemaxSetup.btn_dropDownForGrpProfile);
	        	_click(_listItem($groupProfile));
	        	_setValue($bo_pg_servicemaxSetup.txt_featurePermissionSearch,$userName);
	        	_click($bo_pg_servicemaxSetup.btn_featurePermissionUserSearch);
	        	//Click the SFM designer checkbox. Only one search result is expected as the username is unique.
	        	if(!_exists(_div("/svmx-grid-checkheader-checked/",_under(_div($designerType))))){
	        		_click(_div("/svmx-grid-checkheader/",_under(_div($designerType))));
	        	}
	        	
	        	_wait(3000);
	        	_click($bo_pg_servicemaxSetup.btn_saveFeaturePermissionPage);
	        	_setStrictVisibilityCheck(true);
	        	_assertVisible($bo_pg_servicemaxSetup.msg_FeaturePermission);
	        	_click($bo_pg_servicemaxSetup.btn_okAfterFeaturePermissionSave);
	        	_setStrictVisibilityCheck(false);    	
	        };
	        
	        this.editWizard = function($wizID){
	        	_set($isExists,_isVisible(_span($wizID)));
	        	if($isExists){
	        		_click(_checkbox(0,_leftOf(_span($wizID))));
	        		_click(_submit("Edit"));
	        	}
	        	
	        };
	   
	        //Added by Srinivas to navigate to "View ServiceMax Configuration Changes"
	        this.navigateToViewSVMXConfigurationTab = function(){
	       	 _click($bo_pg_home.btn_allTabs);
	       	 _setStrictVisibilityCheck(true);
	       		_click($bo_pg_home.link_viewSVMXConfiguration);
	       		_setStrictVisibilityCheck(false);
	        };
	         

//***********************Lightning- functions Start*******************************
	        this.switchToLightningMode = function() {
	       	 _selectWindow();
	       	 if(_isVisible(_link("Switch to Lightning Experience")));
	       	  _click($bo_pg_home.lnk_switchToLightningExp);
	       	  _wait(10000,_isVisible(_span("Home")));
	   	
	       };
	       this.navigateToServiceMaxSetup = function(){
	       	_click($bo_pg_Lightning_navigation.btn_App_Launcher);
	       	_setValue($bo_pg_home.txt_searchApps,"ServiceMax Setup");
	       	_click($bo_pg_home.lnk_serviceMaxSetup);
	       	_wait(10000,_isVisible(_span("App Administration")));
	       	 };

	       	
//***********************Lightning- functions End*******************************
	        
};


